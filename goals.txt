Meshes in json:
- Get rid of the model class. Just extend the mesh class to be able to read in obj triangle mesh files.
- Make just one object class. Have a bool for whether it emitsLight and a pointLight* that can be a nullptr. If it emits light, make sure the normals aren't generated.
- Make the meshes use shared pointers

- Simplify skybox
- Should make lightEmitters and litObjects use shared_ptr instead of raw pointers
- No need for Texture class to have m_fileLocation private variable
- Don't use MainShader class and whatnot

- See if we even need to set things like the material properties in the uniform variables each frame or if that's preserved
- See if we can make SpaceObject pointer const in renderVector() method in Renderer.cpp
- Make collider its own thing

- Give SpaceObject a std::shared_ptr<Material>. If it's null in the renderObjectsVector method, then don't bother with material uniform variables
- Make color a glm::vec3 for pointlight
